name: Deployments example

run-name: Pipeline run by @${{ github.actor }}

on:
  push:
    branches: ['main', 'develop']

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Create archive
        run: zip -r archive.zip build/

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: archive.zip
          path: archive.zip

      - name: Get current version
        id: get_version
        run: echo "CURRENT_VERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      - name: Increment version
        id: increment_version
        run: |
          VERSION=${{ env.CURRENT_VERSION }}
          IFS='.' read -r -a parts <<< "$VERSION"
          parts[2]=$((parts[2]+1))
          NEW_VERSION="${parts[0]}.${parts[1]}.${parts[2]}"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Print new version for debugging
        run: echo "New version is ${{ env.NEW_VERSION }}"

  deploy-dev:
    needs: [build-and-test]
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    environment:
      name: dev
      url: https://github.com/${{ github.repository }}/releases/tag/v${{ env.NEW_VERSION }}
    steps:
      - name: Download candidate artifacts
        uses: actions/download-artifact@v3
        with:
          name: archive.zip

      - name: Print new version for debugging
        run: echo "Deploying version ${{ env.NEW_VERSION }} to dev"

      - name: release to dev
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.NEW_VERSION }}
          prerelease: true
          draft: true
          name: Development
          files: archive.zip
        env:
          GITHUB_TOKEN: ${{ secrets.DEV_TOKEN }}

  deploy-prod:
    needs: [build-and-test]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://github.com/${{ github.repository }}/releases/tag/v${{ env.NEW_VERSION }}
    steps:
      - name: Download candidate artifacts
        uses: actions/download-artifact@v3
        with:
          name: archive.zip

      - name: Print new version for debugging
        run: echo "Deploying version ${{ env.NEW_VERSION }} to prod"

      - name: release to main
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.NEW_VERSION }}
          prerelease: false
          draft: false
          name: Production
          files: archive.zip
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.PROD_TOKEN }}
